openapi: 3.0.0
info:
  title: Books API
  description: Books api
  termsOfService: 'http://swagger.io/terms/'
  contact:
    name: 'API Support'
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: http://localhost:8080/api
tags:
  - name: 'books'
    description: 'Api for books'
  - name: 'users'
    description: 'User registration and login'

paths:
  /books:
    post:
      tags:
        - books
      summary: Create a book
      security:
        - bearerAuth: []
      requestBody:
        description: Create a book
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-book'
      responses:
        '201':
          description: Create a book
          content:
            application/json:
              properties:
                data:
                  $ref: '#/components/schemas/book'
        '401':
          description: JWT token is not provided
          content:
            application/json:
              properties:
                data:
                  $ref: '#/components/schemas/unauthorized'
        '403':
          description: JWT token is not valid
          content:
            application/json:
              properties:
                data:
                  $ref: '#/components/schemas/unauthorized'
  /books/{id}:
    get:
      tags:
        - books
      summary: Get a book data
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: book Id
      responses:
        '200':
          description: a book data
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/book'
    patch:
      tags:
        - books
      summary: Update a book data
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: book id
      requestBody:
        description: Create a book
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-book'
      responses:
        '204':
          description: a book data
  /users/sign-up:
    post:
      tags:
        - users
      summary: Create a user
      requestBody:
        description: Create a user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-user'
      responses:
        '201':
          description: Create a user
          content:
            application/json:
              properties:
                data:
                  type: boolean
  /users/sign-in:
    post:
      tags:
        - users
      summary: Login a user
      requestBody:
        description: Login a user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-user'
      responses:
        '200':
          description: Login a user
          content:
            application/json:
              properties:
                data:
                  type: string

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    book:
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        lastPage:
          type: number
        author:
          type: string
    create-book:
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        lastPage:
          type: number
        author:
          type: string
    create-user:
      properties:
        email:
          type: string
        password:
          type: string
    unauthorized:
      properties:
        message:
          type: string
